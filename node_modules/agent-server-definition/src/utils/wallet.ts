import { API_PROVIDER_URL } from "../constants";
import { ProviderInfo, WalletData } from "../types";

const getProviderInfo = async ({
  userAddress
}: {
  userAddress: string;
}): Promise<ProviderInfo> => {
  try {
    const response = await fetch(`${API_PROVIDER_URL}/agent/wallet`, {
      method: "POST",
      body: JSON.stringify({ user_address: userAddress }),
      headers: {
        "Content-Type": "application/json"
      }
    });

    if (!response.ok) {
      throw new Error(`Error fetching wallet: ${response.statusText}`);
    }
    const responseBody = await response.json();
    return responseBody.data;
  } catch (error) {
    throw new Error(`Error fetching wallet: ${error}`);
  }
};

const getWalletData = async (apiKey: string): Promise<WalletData> => {
  try {
    const response = await fetch(`${API_PROVIDER_URL}/agent/wallet/${apiKey}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json"
      }
    });

    if (!response.ok) {
      throw new Error(`Error fetching wallet: ${response.statusText}`);
    }
    const responseBody = await response.json();
    return responseBody.data;
  } catch (error) {
    throw new Error(`Error fetching wallet: ${error}`);
  }
};

export const generateWalletForDeposit = async (address: string) => {
  const providerInfo = await getProviderInfo({
    userAddress: address
  });

  const walletData = await getWalletData(providerInfo.api_key);
  return walletData;
};
